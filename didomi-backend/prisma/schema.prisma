// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id             Int            @id @default(autoincrement())
  accountAddress String         @unique
  title          String
  story          String
  category       Category
  targetAmount   Int
  currentAmount  Int            @default(0)
  startDate      DateTime       @default(now())
  endDate        DateTime?
  ownerId        String
  ownerAddress   String
  owner          User           @relation(fields: [ownerAddress], references: [walletAddress])
  imageURL       String?
  youtubeURL     String?
  socials        Socials?
  projectStatus  ProjectStatus  @default(OPEN)
  contributions  Contribution[]
  accepted_coins TokenType[]
}

model Contribution {
  id                 Int       @id @default(autoincrement())
  accountAddress     String    @unique
  transactionHash    String    @unique
  amount             Int
  tokenType          TokenType @default(SOL)
  message            String
  project            Project   @relation(fields: [projectAddress], references: [accountAddress])
  projectId          Int
  projectAddress     String
  contributor        User      @relation(fields: [contributorAddress], references: [walletAddress])
  contributorAddress String
}

model User {
  id            Int            @id @default(autoincrement())
  walletAddress String         @unique
  contributions Contribution[]
  projects      Project[]
}

model Socials {
  id             Int     @id @default(autoincrement())
  website        String?
  twitter        String?
  instagram      String?
  facebook       String?
  projectAddress String  @unique
  project        Project @relation(fields: [projectAddress], references: [accountAddress])
}

enum TokenType {
  SOL
  USDT
  USDC
  LINK
  RNDR
  WIF
  JUP
  NFT
}

enum ProjectStatus {
  CLOSED
  OPEN
  DRAFT
  FAILED
}

enum Category {
  EDUCATION
  MEDICAL
  MEMORIOAL
  FAITH
  EMERGENCY
  NONPROFIT
  ENVIRONMENT
  COMMUNITY
  CREATIVE
  EVENT
}
